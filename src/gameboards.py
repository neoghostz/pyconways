from copy import deepcopy

class GameBoards():
    def __init__(self, array_width, array_height, block_size = 10):
        self.array_width = array_width
        self.array_height = array_height
        self.block_size = block_size

        self.gen_board()

    def board(self):
        return self.board

    def gen_board(self):
        None

class Toad(GameBoards):
    def __init__(self):
        super().__init__(6, 6)
    
    def gen_board(self):
        self.board = [
            [0,0,0,0,0,0],
            [0,0,0,1,0,0],
            [0,1,0,0,1,0],
            [0,1,0,0,1,0],
            [0,0,1,0,0,0],
            [0,0,0,0,0,0]
        ]

class Beacon(GameBoards):
    def __init__(self):
        super().__init__(6, 6)

    def gen_board(self):
        self.board = [
            [0,0,0,0,0,0],
            [0,1,1,0,0,0],
            [0,1,1,0,0,0],
            [0,0,0,1,1,0],
            [0,0,0,1,1,0],
            [0,0,0,0,0,0]
        ]

class BeeHive(GameBoards):
    def __init__(self):
        super().__init__(6, 5)

    def gen_board(self):
        self.board = [
            [0,0,0,0,0,0],
            [0,0,1,1,0,0],
            [0,1,0,0,1,0],
            [0,0,1,1,0,0],
            [0,0,0,0,0,0]
        ]

class Blinker(GameBoards):
    def __init__(self):
        super().__init__(5, 5)
    
    def gen_board(self):
        self.board = [
            [0,0,0,0,0],
            [0,0,1,0,0],
            [0,0,1,0,0],
            [0,0,1,0,0],
            [0,0,0,0,0]
        ]

class Block(GameBoards):
    def __init__(self):
        super().__init__(4, 4)

    def gen_board(self):
        self.board = [
            [0,0,0,0],
            [0,1,1,0],
            [0,1,1,0],
            [0,0,0,0]
        ]

class Pulsar(GameBoards):
    def __init__(self):
        super().__init__(17, 17)
    
    def gen_board(self):
        self.board = [
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],
            [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],
            [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],
            [0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0],
            [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],
            [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],
            [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
        ]

class Penta(GameBoards):
    def __init__(self):
        super().__init__(15, 18)
    
    def gen_board(self):
        self.board = [
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
        ]